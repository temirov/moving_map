services:
  tileserver:
    container_name: tileserver
    build:
      context: ./tileserverGL  # Adjust this path to where your Dockerfile is located
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ../data:/data  # Map the parent data folder to /data inside the container
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    command: "--verbose"

  nominatim:
    container_name: nominatim
    shm_size: '4g'
    image: mediagis/nominatim:4.4
    ports:
      - "8081:8080"  # Nominatim running on port 8081
    environment:
      THREADS: 16
      IMPORT_US_POSTCODES: true
      IMPORT_WIKIPEDIA: true
      IMPORT_TIGER_ADDRESSES: true
      NOMINATIM_PASSWORD: nominatim
      PBF_URL: https://download.geofabrik.de/north-america-latest.osm.pbf  # URL for OSM data
      REPLICATION_URL: https://download.geofabrik.de/north-america-updates/
      REPLICATION_UPDATE_INTERVAL: "86400"
    volumes:
      - type: bind
        source: ./nominatim-db
        target: /var/lib/postgresql/14/main
      - type: bind
        source: ./nominatim-flatnode
        target: /nominatim/flatnode
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
  
  # PostGIS Service
  postgis:
    container_name: postgis
    shm_size: '4g'
    build:
      context: ./postgis/
      dockerfile: Dockerfile
    image: postgis:utils
    env_file: ../.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./postgis/postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    ports:
      - "5432:5432"  # Maps container's port 5432 to host's port 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  pg_tileserv:
    container_name: pg_tileserv
    image: pramsey/pg_tileserv:latest-alpine-3.12
    build:
      context: ./pg_tileserv
      dockerfile: Dockerfile.alpine
      args:
        VERSION: latest-alpine-3.12
    env_file: ../.env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgis/${POSTGRES_DB}
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
    depends_on:
      postgis:
        condition: service_healthy
    ports:
      - 7800:7800
    
  nginx:
    image: nginx:alpine
    container_name: nginx_server
    ports:
      - "8443:443"
    volumes:
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../frontend/public:/srv  # Mount static files directory
    restart: unless-stopped
